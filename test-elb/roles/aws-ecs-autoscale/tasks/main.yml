# Check pre-requisites
- include: pre-requisites.yml

# Cluster: A logical grouping of container instances that you can place tasks on
- name: "AWS | ECS | Provision the cluster"
  ecs_cluster:
    name: "{{ ecs_cluster_name }}"
    state: present

# Container Instances: Define a EC2 Launch Configuration to create EC2 instances that run the ECS agent, then ensure
# they are registered into the ECS cluster
- name: Gathering ec2 facts
  action: ec2_facts
- name: "AWS | EC2 | Define a EC2 Launch Configuration for ECS use"
  ec2_lc:
    name: "{{ ec2_launch_configuration_name }}"
    image_id: "{{ ec2_ami_id }}"
    region: "{{ my_region }}"
    key_name: "{{ key_name }}"
    security_groups: "{{ ec2_security_groups }}"
    instance_type: "{{ ec2_instance_type }}"
    instance_monitoring: "{{ ec2_instance_monitoring }}"
    instance_profile_name: "{{ ec2_instance_profile_name }}"
    assign_public_ip: "{{ ec2_assign_public_ip }}"
    user_data: "{{ ec2_userdata }}"

# Container Instances: Define an Auto Scaling Group to manage creating/terminating EC2 instances
- name: "AWS | EC2 | Define a EC2 Auto Scaling Group for ECS use"
  ec2_asg:
    name: "{{ ec2_asg_name }}"
    availability_zones: "{{ ec2_asg_availability_zones }}"
    load_balancers: "{{ my_elb_name }}"
    region: "{{ my_region }}"
    launch_config_name: "{{ ec2_launch_configuration_name }}"
    min_size: "{{ ec2_asg_min_size }}"
    max_size: "{{ ec2_asg_max_size }}"
    desired_capacity: "{{ ec2_asg_desired_capacity }}"
    vpc_zone_identifier: "{{ ec2_asg_vpc_subnets }}"
    tags: "{{ ec2_asg_tags }}"
    wait_for_instances: "{{ ec2_asg_wait }}"
